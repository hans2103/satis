{
    "packages": {
        "magento-hackathon/composer-command-integrator": [
            {
                "name": "magento-hackathon/composer-command-integrator",
                "version": "1.0",
                "version_normalized": "1.0.0.0",
                "source": {
                    "type": "git",
                    "url": "https://github.com/magento-hackathon/composer-command-integrator.git",
                    "reference": "826aa5a2a68d10d991b457c397b98773793f0f4c"
                },
                "dist": {
                    "type": "zip",
                    "url": "https://api.github.com/repos/magento-hackathon/composer-command-integrator/zipball/826aa5a2a68d10d991b457c397b98773793f0f4c",
                    "reference": "826aa5a2a68d10d991b457c397b98773793f0f4c",
                    "shasum": ""
                },
                "require": {
                    "composer/composer": "*"
                },
                "require-dev": {
                    "composer/composer": "*",
                    "phpunit/phpunit": "*"
                },
                "time": "2013-07-31T03:10:25+00:00",
                "bin": [
                    "bin/composerCommandIntegrator.php"
                ],
                "type": "library",
                "autoload": {
                    "psr-0": {
                        "MagentoHackathon\\Composer\\Command": "src/"
                    }
                },
                "license": [
                    "OSL-3.0"
                ],
                "authors": [
                    {
                        "name": "Daniel Fahlke aka Flyingmana",
                        "email": "daniel@digitalmanufaktur.com"
                    }
                ],
                "description": "module to create binaries and scripts which get executed in context of composer so they are able to access content from the composer.json ",
                "support": {
                    "source": "https://github.com/magento-hackathon/composer-command-integrator/tree/1.0",
                    "issues": "https://github.com/magento-hackathon/composer-command-integrator/issues"
                }
            },
            {
                "name": "magento-hackathon/composer-command-integrator",
                "version": "1.1",
                "version_normalized": "1.1.0.0",
                "source": {
                    "type": "git",
                    "url": "https://github.com/magento-hackathon/composer-command-integrator.git",
                    "reference": "e33f65a0e1b687fb5c610ac01357b11090e31b34"
                },
                "dist": {
                    "type": "zip",
                    "url": "https://api.github.com/repos/magento-hackathon/composer-command-integrator/zipball/e33f65a0e1b687fb5c610ac01357b11090e31b34",
                    "reference": "e33f65a0e1b687fb5c610ac01357b11090e31b34",
                    "shasum": ""
                },
                "require": {
                    "composer/composer": "*",
                    "symfony/console": "<2.5"
                },
                "require-dev": {
                    "composer/composer": "*",
                    "phpunit/phpunit": "*"
                },
                "time": "2015-01-05T20:53:37+00:00",
                "bin": [
                    "bin/composerCommandIntegrator.php"
                ],
                "type": "library",
                "autoload": {
                    "psr-0": {
                        "MagentoHackathon\\Composer\\Command": "src/"
                    }
                },
                "license": [
                    "OSL-3.0"
                ],
                "authors": [
                    {
                        "name": "Daniel Fahlke aka Flyingmana",
                        "email": "daniel@digitalmanufaktur.com"
                    }
                ],
                "description": "module to create binaries and scripts which get executed in context of composer so they are able to access content from the composer.json ",
                "support": {
                    "source": "https://github.com/magento-hackathon/composer-command-integrator/tree/1.1",
                    "issues": "https://github.com/magento-hackathon/composer-command-integrator/issues"
                }
            },
            {
                "name": "magento-hackathon/composer-command-integrator",
                "version": "1.2",
                "version_normalized": "1.2.0.0",
                "source": {
                    "type": "git",
                    "url": "https://github.com/magento-hackathon/composer-command-integrator.git",
                    "reference": "20d60f8579f0e3352428e7333095c719b8d4f03f"
                },
                "dist": {
                    "type": "zip",
                    "url": "https://api.github.com/repos/magento-hackathon/composer-command-integrator/zipball/20d60f8579f0e3352428e7333095c719b8d4f03f",
                    "reference": "20d60f8579f0e3352428e7333095c719b8d4f03f",
                    "shasum": ""
                },
                "require": {
                    "composer/composer": "*",
                    "symfony/console": "~2.5"
                },
                "require-dev": {
                    "composer/composer": "*",
                    "phpunit/phpunit": "*"
                },
                "time": "2015-02-27T20:57:30+00:00",
                "bin": [
                    "bin/composerCommandIntegrator.php"
                ],
                "type": "library",
                "autoload": {
                    "psr-0": {
                        "MagentoHackathon\\Composer\\Command": "src/"
                    }
                },
                "license": [
                    "OSL-3.0"
                ],
                "authors": [
                    {
                        "name": "Daniel Fahlke aka Flyingmana",
                        "email": "daniel@digitalmanufaktur.com"
                    }
                ],
                "description": "module to create binaries and scripts which get executed in context of composer so they are able to access content from the composer.json ",
                "support": {
                    "source": "https://github.com/magento-hackathon/composer-command-integrator/tree/1.2",
                    "issues": "https://github.com/magento-hackathon/composer-command-integrator/issues"
                }
            },
            {
                "name": "magento-hackathon/composer-command-integrator",
                "version": "1.2.1",
                "version_normalized": "1.2.1.0",
                "source": {
                    "type": "git",
                    "url": "https://github.com/magento-hackathon/composer-command-integrator.git",
                    "reference": "655bc290f901386a6199a4978dc360912ea7023e"
                },
                "dist": {
                    "type": "zip",
                    "url": "https://api.github.com/repos/magento-hackathon/composer-command-integrator/zipball/655bc290f901386a6199a4978dc360912ea7023e",
                    "reference": "655bc290f901386a6199a4978dc360912ea7023e",
                    "shasum": ""
                },
                "require": {
                    "composer/composer": "*",
                    "symfony/console": "~2.5"
                },
                "require-dev": {
                    "composer/composer": "*",
                    "phpunit/phpunit": "*"
                },
                "time": "2015-06-03T07:31:04+00:00",
                "bin": [
                    "bin/composerCommandIntegrator.php"
                ],
                "type": "library",
                "autoload": {
                    "psr-0": {
                        "MagentoHackathon\\Composer\\Command": "src/"
                    }
                },
                "license": [
                    "OSL-3.0"
                ],
                "authors": [
                    {
                        "name": "Daniel Fahlke aka Flyingmana",
                        "email": "daniel@digitalmanufaktur.com"
                    }
                ],
                "description": "module to create binaries and scripts which get executed in context of composer so they are able to access content from the composer.json ",
                "support": {
                    "source": "https://github.com/magento-hackathon/composer-command-integrator/tree/1.2.1",
                    "issues": "https://github.com/magento-hackathon/composer-command-integrator/issues"
                }
            }
        ]
    }
}
